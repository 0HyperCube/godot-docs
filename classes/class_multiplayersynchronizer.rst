:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/MultiplayerSynchronizer.xml.

.. _class_MultiplayerSynchronizer:

MultiplayerSynchronizer
=======================

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`



Properties
----------

+--------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+--------------------+
| :ref:`bool<class_bool>`                                                        | :ref:`public_visibility<class_MultiplayerSynchronizer_property_public_visibility>`           | ``true``           |
+--------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+--------------------+
| :ref:`SceneReplicationConfig<class_SceneReplicationConfig>`                    | :ref:`replication_config<class_MultiplayerSynchronizer_property_replication_config>`         |                    |
+--------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+--------------------+
| :ref:`float<class_float>`                                                      | :ref:`replication_interval<class_MultiplayerSynchronizer_property_replication_interval>`     | ``0.0``            |
+--------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+--------------------+
| :ref:`NodePath<class_NodePath>`                                                | :ref:`root_path<class_MultiplayerSynchronizer_property_root_path>`                           | ``NodePath("..")`` |
+--------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+--------------------+
| :ref:`VisibilityUpdateMode<enum_MultiplayerSynchronizer_VisibilityUpdateMode>` | :ref:`visibility_update_mode<class_MultiplayerSynchronizer_property_visibility_update_mode>` | ``0``              |
+--------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------+--------------------+

Methods
-------

+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`add_visibility_filter<class_MultiplayerSynchronizer_method_add_visibility_filter>` **(** :ref:`Callable<class_Callable>` filter **)**                |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`get_visibility_for<class_MultiplayerSynchronizer_method_get_visibility_for>` **(** :ref:`int<class_int>` peer **)** |const|                          |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`remove_visibility_filter<class_MultiplayerSynchronizer_method_remove_visibility_filter>` **(** :ref:`Callable<class_Callable>` filter **)**          |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`set_visibility_for<class_MultiplayerSynchronizer_method_set_visibility_for>` **(** :ref:`int<class_int>` peer, :ref:`bool<class_bool>` visible **)** |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`update_visibility<class_MultiplayerSynchronizer_method_update_visibility>` **(** :ref:`int<class_int>` for_peer=0 **)**                              |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_MultiplayerSynchronizer_signal_visibility_changed:

- **visibility_changed** **(** :ref:`int<class_int>` for_peer **)**

Enumerations
------------

.. _enum_MultiplayerSynchronizer_VisibilityUpdateMode:

.. _class_MultiplayerSynchronizer_constant_VISIBILITY_PROCESS_IDLE:

.. _class_MultiplayerSynchronizer_constant_VISIBILITY_PROCESS_PHYSICS:

.. _class_MultiplayerSynchronizer_constant_VISIBILITY_PROCESS_NONE:

enum **VisibilityUpdateMode**:

- **VISIBILITY_PROCESS_IDLE** = **0**

- **VISIBILITY_PROCESS_PHYSICS** = **1**

- **VISIBILITY_PROCESS_NONE** = **2**

Property Descriptions
---------------------

.. _class_MultiplayerSynchronizer_property_public_visibility:

- :ref:`bool<class_bool>` **public_visibility**

+-----------+------------------------------+
| *Default* | ``true``                     |
+-----------+------------------------------+
| *Setter*  | set_visibility_public(value) |
+-----------+------------------------------+
| *Getter*  | is_visibility_public()       |
+-----------+------------------------------+

----

.. _class_MultiplayerSynchronizer_property_replication_config:

- :ref:`SceneReplicationConfig<class_SceneReplicationConfig>` **replication_config**

+----------+-------------------------------+
| *Setter* | set_replication_config(value) |
+----------+-------------------------------+
| *Getter* | get_replication_config()      |
+----------+-------------------------------+

----

.. _class_MultiplayerSynchronizer_property_replication_interval:

- :ref:`float<class_float>` **replication_interval**

+-----------+---------------------------------+
| *Default* | ``0.0``                         |
+-----------+---------------------------------+
| *Setter*  | set_replication_interval(value) |
+-----------+---------------------------------+
| *Getter*  | get_replication_interval()      |
+-----------+---------------------------------+

----

.. _class_MultiplayerSynchronizer_property_root_path:

- :ref:`NodePath<class_NodePath>` **root_path**

+-----------+----------------------+
| *Default* | ``NodePath("..")``   |
+-----------+----------------------+
| *Setter*  | set_root_path(value) |
+-----------+----------------------+
| *Getter*  | get_root_path()      |
+-----------+----------------------+

----

.. _class_MultiplayerSynchronizer_property_visibility_update_mode:

- :ref:`VisibilityUpdateMode<enum_MultiplayerSynchronizer_VisibilityUpdateMode>` **visibility_update_mode**

+-----------+-----------------------------------+
| *Default* | ``0``                             |
+-----------+-----------------------------------+
| *Setter*  | set_visibility_update_mode(value) |
+-----------+-----------------------------------+
| *Getter*  | get_visibility_update_mode()      |
+-----------+-----------------------------------+

Method Descriptions
-------------------

.. _class_MultiplayerSynchronizer_method_add_visibility_filter:

- void **add_visibility_filter** **(** :ref:`Callable<class_Callable>` filter **)**

----

.. _class_MultiplayerSynchronizer_method_get_visibility_for:

- :ref:`bool<class_bool>` **get_visibility_for** **(** :ref:`int<class_int>` peer **)** |const|

----

.. _class_MultiplayerSynchronizer_method_remove_visibility_filter:

- void **remove_visibility_filter** **(** :ref:`Callable<class_Callable>` filter **)**

----

.. _class_MultiplayerSynchronizer_method_set_visibility_for:

- void **set_visibility_for** **(** :ref:`int<class_int>` peer, :ref:`bool<class_bool>` visible **)**

----

.. _class_MultiplayerSynchronizer_method_update_visibility:

- void **update_visibility** **(** :ref:`int<class_int>` for_peer=0 **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
