.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Tree.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Tree:

Tree
====

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`
**Category:** Core

Brief Description
-----------------

Control to show a tree of items.

Methods
-------

+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`          | :ref:`are_column_titles_visible<class_Tree_are_column_titles_visible>` **(** **)** const                                                     |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`clear<class_Tree_clear>` **(** **)**                                                                                                   |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>`  | :ref:`create_item<class_Tree_create_item>` **(** :ref:`Object<class_Object>` parent=null, :ref:`int<class_int>` idx=-1 **)**                 |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`ensure_cursor_is_visible<class_Tree_ensure_cursor_is_visible>` **(** **)**                                                             |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_column_at_position<class_Tree_get_column_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** const                    |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`      | :ref:`get_column_title<class_Tree_get_column_title>` **(** :ref:`int<class_int>` column **)** const                                          |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_column_width<class_Tree_get_column_width>` **(** :ref:`int<class_int>` column **)** const                                          |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`        | :ref:`get_custom_popup_rect<class_Tree_get_custom_popup_rect>` **(** **)** const                                                             |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_drop_section_at_position<class_Tree_get_drop_section_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** const        |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>`  | :ref:`get_edited<class_Tree_get_edited>` **(** **)** const                                                                                   |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_edited_column<class_Tree_get_edited_column>` **(** **)** const                                                                     |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`        | :ref:`get_item_area_rect<class_Tree_get_item_area_rect>` **(** :ref:`Object<class_Object>` item, :ref:`int<class_int>` column=-1 **)** const |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>`  | :ref:`get_item_at_position<class_Tree_get_item_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** const                        |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>`  | :ref:`get_next_selected<class_Tree_get_next_selected>` **(** :ref:`Object<class_Object>` from **)**                                          |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_pressed_button<class_Tree_get_pressed_button>` **(** **)** const                                                                   |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>`  | :ref:`get_root<class_Tree_get_root>` **(** **)**                                                                                             |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`    | :ref:`get_scroll<class_Tree_get_scroll>` **(** **)** const                                                                                   |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>`  | :ref:`get_selected<class_Tree_get_selected>` **(** **)** const                                                                               |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_selected_column<class_Tree_get_selected_column>` **(** **)** const                                                                 |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_column_expand<class_Tree_set_column_expand>` **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` expand **)**              |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_column_min_width<class_Tree_set_column_min_width>` **(** :ref:`int<class_int>` column, :ref:`int<class_int>` min_width **)**       |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_column_title<class_Tree_set_column_title>` **(** :ref:`int<class_int>` column, :ref:`String<class_String>` title **)**             |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_column_titles_visible<class_Tree_set_column_titles_visible>` **(** :ref:`bool<class_bool>` visible **)**                           |
+----------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_Tree_button_pressed:

- **button_pressed** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column, :ref:`int<class_int>` id **)**

Emitted when a button on the tree was pressed (see :ref:`TreeItem.add_button<class_TreeItem_add_button>`).

.. _class_Tree_cell_selected:

- **cell_selected** **(** **)**

Emitted when a cell is selected.

.. _class_Tree_column_title_pressed:

- **column_title_pressed** **(** :ref:`int<class_int>` column **)**

Emitted when a column's title is pressed.

.. _class_Tree_custom_popup_edited:

- **custom_popup_edited** **(** :ref:`bool<class_bool>` arrow_clicked **)**

Emitted when a cell with the ``CELL_MODE_CUSTOM`` is clicked to be edited.

.. _class_Tree_empty_tree_rmb_selected:

- **empty_tree_rmb_selected** **(** :ref:`Vector2<class_Vector2>` position **)**

Emitted when the right mouse button is pressed if RMB selection is active and the tree is empty.

.. _class_Tree_item_activated:

- **item_activated** **(** **)**

Emitted when an item's label is double-clicked.

.. _class_Tree_item_collapsed:

- **item_collapsed** **(** :ref:`TreeItem<class_TreeItem>` item **)**

Emitted when an item is collapsed by a click on the folding arrow.

.. _class_Tree_item_custom_button_pressed:

- **item_custom_button_pressed** **(** **)**

.. _class_Tree_item_double_clicked:

- **item_double_clicked** **(** **)**

Emitted when an item's icon is double-clicked.

.. _class_Tree_item_edited:

- **item_edited** **(** **)**

Emitted when an item is edited.

.. _class_Tree_item_rmb_edited:

- **item_rmb_edited** **(** **)**

Emitted when an item is edited using the right mouse button.

.. _class_Tree_item_rmb_selected:

- **item_rmb_selected** **(** :ref:`Vector2<class_Vector2>` position **)**

Emitted when an item is selected with right mouse button.

.. _class_Tree_item_selected:

- **item_selected** **(** **)**

Emitted when an item is selected with right mouse button.

.. _class_Tree_multi_selected:

- **multi_selected** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column, :ref:`bool<class_bool>` selected **)**

Emitted instead of ``item_selected`` when ``select_mode`` is ``SELECT_MULTI``.

.. _class_Tree_nothing_selected:

- **nothing_selected** **(** **)**


Enumerations
------------

  .. _enum_Tree_DropModeFlags:

enum **DropModeFlags**

- **DROP_MODE_DISABLED** = **0**
- **DROP_MODE_ON_ITEM** = **1**
- **DROP_MODE_INBETWEEN** = **2**

  .. _enum_Tree_SelectMode:

enum **SelectMode**

- **SELECT_SINGLE** = **0** --- Allow selection of a single item at a time.
- **SELECT_ROW** = **1**
- **SELECT_MULTI** = **2** --- Allow selection of multiple items at the same time.


Description
-----------

This shows a tree of items that can be selected, expanded and collapsed. The tree can have multiple columns with custom controls like text editing, buttons and popups. It can be useful for structured displays and interactions.

Trees are built via code, using :ref:`TreeItem<class_TreeItem>` objects to create the structure. They have a single root but multiple roots can be simulated if a dummy hidden root is added.

::

    func _ready():
        var tree = Tree.new()
        var root = tree.create_item()
        tree.set_hide_root(true)
        var child1 = tree.create_item(root)
        var child2 = tree.create_item(root)
        var subchild1 = tree.create_item(child1)
        subchild1.set_text(0, "Subchild1")

Property Descriptions
---------------------

  .. _class_Tree_allow_reselect:

- :ref:`bool<class_bool>` **allow_reselect** - If ``true`` the currently selected cell may be selected again.

  .. _class_Tree_allow_rmb_select:

- :ref:`bool<class_bool>` **allow_rmb_select** - If ``true`` a right mouse button click can select items.

  .. _class_Tree_columns:

- :ref:`int<class_int>` **columns** - The amount of columns.

  .. _class_Tree_drop_mode_flags:

- :ref:`int<class_int>` **drop_mode_flags** - The drop mode as an OR combination of flags. See ``DROP_MODE_*`` constants. Once dropping is done, reverts to ``DROP_MODE_DISABLED``. Setting this during :ref:`can_drop_data<class_Tree_can_drop_data>` is recommended.

  .. _class_Tree_hide_folding:

- :ref:`bool<class_bool>` **hide_folding** - If ``true`` the folding arrow is hidden.

  .. _class_Tree_hide_root:

- :ref:`bool<class_bool>` **hide_root** - If ``true`` the tree's root is hidden.

  .. _class_Tree_select_mode:

- :ref:`SelectMode<enum_Tree_SelectMode>` **select_mode** - Allow single or multiple selection. See the ``SELECT_*`` constants.


Method Descriptions
-------------------

.. _class_Tree_are_column_titles_visible:

- :ref:`bool<class_bool>` **are_column_titles_visible** **(** **)** const

Returns ``true`` if the column titles are being shown.

.. _class_Tree_clear:

- void **clear** **(** **)**

Clears the tree. This removes all items.

.. _class_Tree_create_item:

- :ref:`TreeItem<class_TreeItem>` **create_item** **(** :ref:`Object<class_Object>` parent=null, :ref:`int<class_int>` idx=-1 **)**

Create an item in the tree and add it as the last child of ``parent``. If parent is not given, it will be added as the root's last child, or it'll the be the root itself if the tree is empty.

.. _class_Tree_ensure_cursor_is_visible:

- void **ensure_cursor_is_visible** **(** **)**

Makes the currently selected item visible. This will scroll the tree to make sure the selected item is visible.

.. _class_Tree_get_column_at_position:

- :ref:`int<class_int>` **get_column_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** const

Returns the column index under the given point.

.. _class_Tree_get_column_title:

- :ref:`String<class_String>` **get_column_title** **(** :ref:`int<class_int>` column **)** const

Returns the column's title.

.. _class_Tree_get_column_width:

- :ref:`int<class_int>` **get_column_width** **(** :ref:`int<class_int>` column **)** const

Returns the column's width in pixels.

.. _class_Tree_get_custom_popup_rect:

- :ref:`Rect2<class_Rect2>` **get_custom_popup_rect** **(** **)** const

Returns the rectangle for custom popups. Helper to create custom cell controls that display a popup. See :ref:`TreeItem.set_cell_mode<class_TreeItem_set_cell_mode>`.

.. _class_Tree_get_drop_section_at_position:

- :ref:`int<class_int>` **get_drop_section_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** const

If :ref:`drop_mode_flags<class_Tree_drop_mode_flags>` includes ``DROP_MODE_INBETWEEN``, returns -1 if ``position`` is the upper part of a tree item at that position, 1 for the lower part, and additionally 0 for the middle part if :ref:`drop_mode_flags<class_Tree_drop_mode_flags>` includes ``DROP_MODE_ON_ITEM``. 

Otherwise, returns 0. If there are no tree item at ``position``, returns -100.

.. _class_Tree_get_edited:

- :ref:`TreeItem<class_TreeItem>` **get_edited** **(** **)** const

Returns the currently edited item. This is only available for custom cell mode.

.. _class_Tree_get_edited_column:

- :ref:`int<class_int>` **get_edited_column** **(** **)** const

Returns the column for the currently edited item. This is only available for custom cell mode.

.. _class_Tree_get_item_area_rect:

- :ref:`Rect2<class_Rect2>` **get_item_area_rect** **(** :ref:`Object<class_Object>` item, :ref:`int<class_int>` column=-1 **)** const

Returns the rectangle area for the specified item. If column is specified, only get the position and size of that column, otherwise get the rectangle containing all columns.

.. _class_Tree_get_item_at_position:

- :ref:`TreeItem<class_TreeItem>` **get_item_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** const

Returns the tree item at the specified position (relative to the tree origin position).

.. _class_Tree_get_next_selected:

- :ref:`TreeItem<class_TreeItem>` **get_next_selected** **(** :ref:`Object<class_Object>` from **)**

Returns the next selected item after the given one.

.. _class_Tree_get_pressed_button:

- :ref:`int<class_int>` **get_pressed_button** **(** **)** const

Returns the last pressed button's index.

.. _class_Tree_get_root:

- :ref:`TreeItem<class_TreeItem>` **get_root** **(** **)**

Returns the tree's root item.

.. _class_Tree_get_scroll:

- :ref:`Vector2<class_Vector2>` **get_scroll** **(** **)** const

Returns the current scrolling position.

.. _class_Tree_get_selected:

- :ref:`TreeItem<class_TreeItem>` **get_selected** **(** **)** const

Returns the currently selected item.

.. _class_Tree_get_selected_column:

- :ref:`int<class_int>` **get_selected_column** **(** **)** const

Returns the current selection's column.

.. _class_Tree_set_column_expand:

- void **set_column_expand** **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` expand **)**

If ``true`` the column will have the "Expand" flag of :ref:`Control<class_Control>`.

.. _class_Tree_set_column_min_width:

- void **set_column_min_width** **(** :ref:`int<class_int>` column, :ref:`int<class_int>` min_width **)**

Set the minimum width of a column.

.. _class_Tree_set_column_title:

- void **set_column_title** **(** :ref:`int<class_int>` column, :ref:`String<class_String>` title **)**

Set the title of a column.

.. _class_Tree_set_column_titles_visible:

- void **set_column_titles_visible** **(** :ref:`bool<class_bool>` visible **)**

If ``true`` column titles are visible.


