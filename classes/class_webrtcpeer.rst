.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the WebRTCPeer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WebRTCPeer:

WebRTCPeer
==========

**Inherits:** :ref:`PacketPeer<class_PacketPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`WebRTCPeerGDNative<class_WebRTCPeerGDNative>`

**Category:** Core

Brief Description
-----------------



Properties
----------

+---------------------------------------------+---------------------------------------------------------+
| :ref:`WriteMode<enum_WebRTCPeer_WriteMode>` | :ref:`write_mode<class_WebRTCPeer_property_write_mode>` |
+---------------------------------------------+---------------------------------------------------------+

Methods
-------

+---------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                   | :ref:`add_ice_candidate<class_WebRTCPeer_method_add_ice_candidate>` **(** :ref:`String<class_String>` media, :ref:`int<class_int>` index, :ref:`String<class_String>` name **)** |
+---------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                   | :ref:`create_offer<class_WebRTCPeer_method_create_offer>` **(** **)**                                                                                                            |
+---------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`ConnectionState<enum_WebRTCPeer_ConnectionState>` | :ref:`get_connection_state<class_WebRTCPeer_method_get_connection_state>` **(** **)** const                                                                                      |
+---------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                   | :ref:`poll<class_WebRTCPeer_method_poll>` **(** **)**                                                                                                                            |
+---------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                   | :ref:`set_local_description<class_WebRTCPeer_method_set_local_description>` **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**                        |
+---------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                   | :ref:`set_remote_description<class_WebRTCPeer_method_set_remote_description>` **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**                      |
+---------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`was_string_packet<class_WebRTCPeer_method_was_string_packet>` **(** **)** const                                                                                            |
+---------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_WebRTCPeer_signal_new_ice_candidate:

- **new_ice_candidate** **(** :ref:`String<class_String>` media, :ref:`int<class_int>` index, :ref:`String<class_String>` name **)**

.. _class_WebRTCPeer_signal_offer_created:

- **offer_created** **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**

Enumerations
------------

.. _enum_WebRTCPeer_WriteMode:

.. _class_WebRTCPeer_constant_WRITE_MODE_TEXT:

.. _class_WebRTCPeer_constant_WRITE_MODE_BINARY:

enum **WriteMode**:

- **WRITE_MODE_TEXT** = **0**

- **WRITE_MODE_BINARY** = **1**

.. _enum_WebRTCPeer_ConnectionState:

.. _class_WebRTCPeer_constant_STATE_NEW:

.. _class_WebRTCPeer_constant_STATE_CONNECTING:

.. _class_WebRTCPeer_constant_STATE_CONNECTED:

.. _class_WebRTCPeer_constant_STATE_DISCONNECTED:

.. _class_WebRTCPeer_constant_STATE_FAILED:

.. _class_WebRTCPeer_constant_STATE_CLOSED:

enum **ConnectionState**:

- **STATE_NEW** = **0**

- **STATE_CONNECTING** = **1**

- **STATE_CONNECTED** = **2**

- **STATE_DISCONNECTED** = **3**

- **STATE_FAILED** = **4**

- **STATE_CLOSED** = **5**

Property Descriptions
---------------------

.. _class_WebRTCPeer_property_write_mode:

- :ref:`WriteMode<enum_WebRTCPeer_WriteMode>` **write_mode**

+----------+-----------------------+
| *Setter* | set_write_mode(value) |
+----------+-----------------------+
| *Getter* | get_write_mode()      |
+----------+-----------------------+

Method Descriptions
-------------------

.. _class_WebRTCPeer_method_add_ice_candidate:

- :ref:`Error<enum_@GlobalScope_Error>` **add_ice_candidate** **(** :ref:`String<class_String>` media, :ref:`int<class_int>` index, :ref:`String<class_String>` name **)**

.. _class_WebRTCPeer_method_create_offer:

- :ref:`Error<enum_@GlobalScope_Error>` **create_offer** **(** **)**

.. _class_WebRTCPeer_method_get_connection_state:

- :ref:`ConnectionState<enum_WebRTCPeer_ConnectionState>` **get_connection_state** **(** **)** const

.. _class_WebRTCPeer_method_poll:

- :ref:`Error<enum_@GlobalScope_Error>` **poll** **(** **)**

.. _class_WebRTCPeer_method_set_local_description:

- :ref:`Error<enum_@GlobalScope_Error>` **set_local_description** **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**

.. _class_WebRTCPeer_method_set_remote_description:

- :ref:`Error<enum_@GlobalScope_Error>` **set_remote_description** **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**

.. _class_WebRTCPeer_method_was_string_packet:

- :ref:`bool<class_bool>` **was_string_packet** **(** **)** const

