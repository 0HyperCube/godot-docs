.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TouchScreenButton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TouchScreenButton:

TouchScreenButton
=================

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`
**Category:** Core

Brief Description
-----------------

Button for touch screen devices.

Methods
-------

+--------------------------+-------------------------------------------------------------------------+
| :ref:`bool<class_bool>`  | :ref:`is_pressed<class_TouchScreenButton_is_pressed>` **(** **)** const |
+--------------------------+-------------------------------------------------------------------------+

Signals
-------

.. _class_TouchScreenButton_pressed:

- **pressed** **(** **)**

Emitted when the button is pressed (down).

.. _class_TouchScreenButton_released:

- **released** **(** **)**

Emitted when the button is released (up).


Enumerations
------------

  .. _enum_TouchScreenButton_VisibilityMode:

enum **VisibilityMode**

- **VISIBILITY_ALWAYS** = **0** --- Always visible.
- **VISIBILITY_TOUCHSCREEN_ONLY** = **1** --- Visible on touch screens only.


Description
-----------

Button for touch screen devices. You can set it to be visible on all screens, or only on touch devices.

Property Descriptions
---------------------

  .. _class_TouchScreenButton_action:

- :ref:`String<class_String>` **action** - The button's action. Actions can be handled with :ref:`InputEventAction<class_InputEventAction>`.

  .. _class_TouchScreenButton_bitmask:

- :ref:`BitMap<class_BitMap>` **bitmask** - The button's bitmask.

  .. _class_TouchScreenButton_normal:

- :ref:`Texture<class_Texture>` **normal** - The button's texture for the normal state.

  .. _class_TouchScreenButton_passby_press:

- :ref:`bool<class_bool>` **passby_press** - If ``true`` passby presses are enabled.

  .. _class_TouchScreenButton_pressed:

- :ref:`Texture<class_Texture>` **pressed** - The button's texture for the pressed state.

  .. _class_TouchScreenButton_shape:

- :ref:`Shape2D<class_Shape2D>` **shape** - The button's shape.

  .. _class_TouchScreenButton_shape_centered:

- :ref:`bool<class_bool>` **shape_centered** - If ``true`` the button's shape is centered.

  .. _class_TouchScreenButton_shape_visible:

- :ref:`bool<class_bool>` **shape_visible** - If ``true`` the button's shape is visible.

  .. _class_TouchScreenButton_visibility_mode:

- :ref:`VisibilityMode<enum_TouchScreenButton_VisibilityMode>` **visibility_mode** - The button's visibility mode. See ``VISIBILITY_*`` constants.


Method Descriptions
-------------------

.. _class_TouchScreenButton_is_pressed:

- :ref:`bool<class_bool>` **is_pressed** **(** **)** const

Returns ``true`` if this button is currently pressed.


