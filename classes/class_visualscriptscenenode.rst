:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/visual_script/doc_classes/VisualScriptSceneNode.xml.

.. _class_VisualScriptSceneNode:

VisualScriptSceneNode
=====================

**Inherits:** :ref:`VisualScriptNode<class_VisualScriptNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Node reference.

Description
-----------

A direct reference to a node.

\ **Input Ports:**\ 

none

\ **Output Ports:**\ 

- Data: ``node`` (obj)

Properties
----------

+---------------------------------+------------------------------------------------------------------+-------------------+
| :ref:`NodePath<class_NodePath>` | :ref:`node_path<class_VisualScriptSceneNode_property_node_path>` | ``NodePath(".")`` |
+---------------------------------+------------------------------------------------------------------+-------------------+

Property Descriptions
---------------------

.. _class_VisualScriptSceneNode_property_node_path:

- :ref:`NodePath<class_NodePath>` **node_path**

+-----------+----------------------+
| *Default* | ``NodePath(".")``    |
+-----------+----------------------+
| *Setter*  | set_node_path(value) |
+-----------+----------------------+
| *Getter*  | get_node_path()      |
+-----------+----------------------+

The node's path in the scene tree.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
